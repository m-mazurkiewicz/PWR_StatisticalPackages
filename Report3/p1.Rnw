
\documentclass{article}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage[utf8]{inputenc}
\usepackage[top=3cm, bottom=3cm, left=2.5cm, right=2.5cm]{geometry}
\usepackage{graphicx}
\usepackage{float}
\usepackage[colorlinks=true, linkcolor=blue]{hyperref}
\usepackage{amsmath,amsthm,amsfonts,amssymb}
\usepackage{wrapfig}
\usepackage{subcaption}

\begin{document}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<<global_settings, echo=FALSE, warning=FALSE, include = FALSE>>=
library(knitr)
library(car)
library(ggplot2)
library(gridExtra)
library(GGally)
library(latex2exp)
packages <- function(x){
  x <- as.character(match.call()[[2]])
  if (!require(x, character.only = TRUE)){
    install.packages(pkgs = x, repos = "http://cran.r-project.org")
    require(x, character.only = TRUE)
  }
}

opts_chunk$set(fig.path = "figure/", fig.align = "center", fig.pos = "H",
               fig.width = 5, fig.height = 4)
opts_knit$set(root.dir = getwd())
@
 
 
  \SweaveOpts{concordance=TRUE}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % strona tytulowa
\title{Statistical packages - report 3}
\author{Urszula GrochociÅ„ska, Marcin Mazurkiewicz}
\maketitle
\tableofcontents


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  \section{Introduction}
This report concerns periodic inspections and interval censored data. The first task is to prepare a generator for a periodically inspected lightbulb. Then there would be presented a short analysis basing on this generator. Finally there are two approaches shown: first uses the naive estimator (without censored data) and the second one with censored data.
  \section{Task 1 -- creating generator}
We assume, that the lifetimes of lightbulbs is a vector of iid random variables from the exponential distribution with failure rate $\lambda$. The times between inspections is a vector of iid random variables from the exponential distribution with rate $v$. Change of a failed lightbulb can occur only at the moment of inspection.
The generator should take 3 parameters: two are mentioned above and additional $T_0$ which is the time horizon.
The output of the generator is:
\begin{itemize}
\item interval censored lifetimes of lightbulbs,
\item moments of inspection,
\item moments of light failures.
\end{itemize}
The examplary samples are shown on the figure \ref{samples}
<<generator, echo=true>>=
  v <- .7
  lambda <- 0.5
  T_0 <- 100
  inspection_times <- c(0, sort(runif(n = rpois(1, lambda = T_0 * v),
                                      min = 0, max = T_0)))
 
  lightbulb <- 1
  new_bulb_moments <- c(0)
  lightbulbTime <- rexp(1, rate = lambda)
  lightbulbLifetimes <- c()
  for (i in 1:(length(inspection_times) - 1)){
    if ( inspection_times[i + 1] - new_bulb_moments[lightbulb] > lightbulbTime){
      new_bulb_moments <- append(new_bulb_moments, inspection_times[i + 1])
      lightbulb <- lightbulb + 1
      lightbulbLifetimes <- append(lightbulbLifetimes, lightbulbTime)
      lightbulbTime <- rexp(1, rate = lambda)
    }
  }
 
  df_inspection_times <- data.frame(number = 1:length(inspection_times),
                                    moments = inspection_times)
@


\begin{figure}
    \center
    \begin{subfigure}[b]{0.8\textwidth}
<<task_2_plot1, fig=TRUE, fig.width=8cm , echo=False>>=
  ggplot(df_inspection_times, aes(x = moments, y = number,
                                  color = "inspection")) + geom_point() +
    labs(x = "Moments of inspection", y = "Number of inspection", colour = "") +
    coord_cartesian(xlim = c(3, T_0 - 3)) + scale_color_manual(values = "black")
@
    \end{subfigure}
    \begin{subfigure}[b]{0.8\textwidth}
<<task_2_plot2, fig=TRUE, fig.width=8cm , echo=False>>=
  momentsOfFailure <- lightbulbLifetimes +
    new_bulb_moments[1:length(new_bulb_moments) - 1]
  df_momentsOfFailure <- data.frame(number = 1:length(momentsOfFailure),
                                    moments = momentsOfFailure)
  ggplot(df_momentsOfFailure, aes(x = moments, y = number, color = "failure")) +
    geom_point() +
    labs(x = "Moments of failure", y = "Number of failure", colour = "") +
    coord_cartesian(xlim = c(3, T_0 - 3)) + scale_color_manual(values = "black")
@
    \end{subfigure}
    \caption{Samples produced by generator with $v=0.7, \quad \lambda=0.5, \quad T_0=100$}
    \label{samples}
\end{figure}


\section{Task 2 -- generator analysis}
This section presents the answers for the question about generator -- in our case, the parameters of the generator are $v=0.7 \quad \lambda=0.5 \quad T_0=100$ and we made 100 Monte Carlo iterations (when it was needed):
\begin{enumerate}
\item What is the percentage of time when there is no light?\\
      \textbf{Answer:} The share of time without light is at level 49.5\%.
\item What is the average number of lightbulb replacements?\\
      \textbf{Answer:} The average number of replacements is 29.75.
\item What is the average time without light?\\
      \textbf{Answer:} The average time without light is 1.47.
\end{enumerate}

<<analysis, echo=true>>=
  momentsOfFailure <- lightbulbLifetimes +
    new_bulb_moments[1:length(new_bulb_moments) - 1]
  percent_time_no_light <-
    sum(new_bulb_moments[2:length(new_bulb_moments)]
                                      - momentsOfFailure) /
    tail(new_bulb_moments, n = 1)
 
  N <- 100
  v <- .7
  lambda <- 0.5
  T_0 <- 100
  avg_no_of_replacements <- 0
  avg_time_without_light <- 0
  for (j in 1:N){
      inspection_times <- c(0, sort(runif(n = rpois(1, lambda = T_0 * v),
                                          min = 0, max = T_0)))
      lightbulb <- 1
      new_bulb_moments <- c(0)
      lightbulbTime <- rexp(1, rate = lambda)
      lightbulbLifetimes <- c()
      for (i in 1:(length(inspection_times) - 1)){
          if ( inspection_times[i + 1] - new_bulb_moments[lightbulb] >
               lightbulbTime){
              new_bulb_moments <- append(new_bulb_moments,
                                         inspection_times[i + 1])
              lightbulb <- lightbulb + 1
              lightbulbLifetimes <- append(lightbulbLifetimes, lightbulbTime)
              lightbulbTime <- rexp(1, rate = lambda)
          }
      }
      momentsOfFailure <- lightbulbLifetimes +
        new_bulb_moments[1:length(new_bulb_moments) - 1]
      avg_time_without_light <- avg_time_without_light +
        mean(new_bulb_moments[2:length(new_bulb_moments)] -
               momentsOfFailure)
      avg_no_of_replacements <- avg_no_of_replacements + lightbulb
  }
 
  avg_no_of_replacements <- avg_no_of_replacements / N
  avg_time_without_light <- avg_time_without_light / N
@
\section{Task 3 -- naive estimator}
This approach assumes that failures occured during inspections. We estimate the failure rate using an average of  right sides of intervals.

<<naive, echo=true>>=
list_of_means <- c()
list_of_vars <- c()
list_of_biases <- c()
list_of_mses <- c()
N <- 100

# for (T_0 in seq(50, 250, 10)){
for (v in seq(0.5, 3, 0.1)){
# for (lambda in seq(0.1, 2.5, 0.1)){
  lambda <- 0.5
  T_0 <- 100
  avg_mean <- 0
  avg_var <- 0
  avg_bias <- 0
  avg_mse <- 0
  for (j in 1:N){
    inspection_times <- c(0, sort(runif(n = rpois(1, lambda = T_0 * v),
                                        min = 0, max = T_0)))
    lightbulb <- 1
    new_bulb_moments <- c(0)
    lightbulbTime <- rexp(1, rate = lambda)
    lightbulbLifetimes <- c()
    for (i in 1:(length(inspection_times) - 1)){
      if ( inspection_times[i + 1] - new_bulb_moments[lightbulb] >
           lightbulbTime){
        new_bulb_moments <- append(new_bulb_moments, inspection_times[i + 1])
        lightbulb <- lightbulb + 1
        lightbulbLifetimes <- append(lightbulbLifetimes, lightbulbTime)
        lightbulbTime <- rexp(1, rate = lambda)
      }
    }

    naive_lightbulb_lifetime <- new_bulb_moments[2:length(new_bulb_moments)] -
      new_bulb_moments[1:length(new_bulb_moments) - 1]
    avg_mean <- avg_mean + mean(naive_lightbulb_lifetime)
    avg_var <- avg_var + var(naive_lightbulb_lifetime)
    avg_bias <- lambda - mean(naive_lightbulb_lifetime)

  }

  list_of_means <- append(list_of_means, avg_mean / N)
  list_of_vars <- append(list_of_vars, avg_var / N)
  list_of_biases <- append(list_of_biases, avg_bias / N)
  list_of_mses <- append(list_of_mses, avg_mse / N)
}

@

\begin{figure}
\center
<<dependance_fr, fig=TRUE, fig.hight=5cm , echo=False>>=
  df_task4 <- data.frame(failure_rate = seq(0.5, 3, 0.1), means = list_of_means,
                         vars = list_of_vars, biases = list_of_biases,
                         mses = list_of_mses)
  ggplot(data = df_task4, aes(x = failure_rate, y = value)) +
    geom_point(aes(y = means, color = "Mean")) +
    geom_point(aes(y = vars, color = "Variance")) +
    geom_point(aes(y = biases, color = "Bias")) +
    geom_point(aes(y = mses, color = "MSE")) +
    labs(colour = "", x = "Failure rate", y = "Value") +
    theme_bw() +
    scale_color_manual(values = c("blue", "red", "green", "black"))
@
\caption{Characteristics in dependence of failure rate.}
\label{FR}
\end{figure}

<<naive2, echo=false>>=
list_of_means <- c()
list_of_vars <- c()
list_of_biases <- c()
list_of_mses <- c()
N <- 100

for (lambda in seq(0.1, 2.5, 0.1)){
  v <- .7
  T_0 <- 100
  avg_mean <- 0
  avg_var <- 0
  avg_bias <- 0
  avg_mse <- 0
  for (j in 1:N){
    inspection_times <- c(0, sort(runif(n = rpois(1, lambda = T_0 * v),
                                        min = 0, max = T_0)))
    lightbulb <- 1
    new_bulb_moments <- c(0)
    lightbulbTime <- rexp(1, rate = lambda)
    lightbulbLifetimes <- c()
    for (i in 1:(length(inspection_times) - 1)){
      if ( inspection_times[i + 1] - new_bulb_moments[lightbulb] >
           lightbulbTime){
        new_bulb_moments <- append(new_bulb_moments, inspection_times[i + 1])
        lightbulb <- lightbulb + 1
        lightbulbLifetimes <- append(lightbulbLifetimes, lightbulbTime)
        lightbulbTime <- rexp(1, rate = lambda)
      }
    }

    naive_lightbulb_lifetime <- new_bulb_moments[2:length(new_bulb_moments)] -
      new_bulb_moments[1:length(new_bulb_moments) - 1]
    avg_mean <- avg_mean + mean(naive_lightbulb_lifetime)
    avg_var <- avg_var + var(naive_lightbulb_lifetime)
    avg_bias <- lambda - mean(naive_lightbulb_lifetime)

  }

  list_of_means <- append(list_of_means, avg_mean / N)
  list_of_vars <- append(list_of_vars, avg_var / N)
  list_of_biases <- append(list_of_biases, avg_bias / N)
  list_of_mses <- append(list_of_mses, avg_mse / N)
}

@

\begin{figure}
\center
<<dependance_ir, fig=TRUE, fig.hight=5cm , echo=False>>=
   df_task4 <- data.frame(inspection_rate = seq(0.1, 2.5, 0.1),
                          means = list_of_means, vars = list_of_vars,
                          biases = list_of_biases, mses = list_of_mses)
   #ggplot(data = df_task4, aes(x = time, y = value)) +
   ggplot(data = df_task4, aes(x = inspection_rate, y = value)) +
      geom_point(aes(y = means, color = "Mean")) +
      geom_point(aes(y = vars, color = "Variance")) +
      geom_point(aes(y = biases, color = "Bias")) +
      geom_point(aes(y = mses, color = "MSE")) +
      labs(colour = "", x = "Inspection rate", y = "Value") +
      theme_bw() +
      scale_color_manual(values = c("blue", "red", "green", "black"))
@
\caption{Characteristics in dependence of inspection rate.}
\label{IR}
\end{figure}

The charts \ref{FR} and \ref{IR} presents the dependence between mean, variance bias, and MSE and respectively failure rate and inspection rate. In both cases, the mean and variance have a downward trend. The bias and the MSE result in values near 0 because we have taken 100 Monte Carlo Steps.

\section{LintR}
In our report, we have also used \textit{LintR} package to check the correctness of written code. To do that we executed the following line of code in console: \textit{lintr::lint\("nameoffile.R"\)}. All mistakes had been corrected. In one part of the code we intentionally left some comments.

\section{Conclusions}
Our analysis consist of only one of approach about censored data analysis. That one is a simple approach in which we assume that the failurs occures in the same time as inspections. In such case our analysis shows that about half of time there is no light. Taking into consideration the mean and the variance of the estimator we obtain the results that shows that with increasing inspection rate or falure rate both of this characteristics decrease. Another aproach is the Turnbull estimator which reject the asumption about the occurance of the failure in the inspection times. This way of analysing such data seems to be more correct.

\end{document}